services:
  redis1:
    image: bitnami/redis:7.2.4
    container_name: redis1
    restart: unless-stopped
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"
    logging:
      driver: "json-file"
      options:
        "max-size": "10m"
        "max-file": "5"
    volumes:
      # - redis1:/data
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 4
      start_period: 10s


  redis2:
    &redis-slave
    image: bitnami/redis:7.2.4
    container_name: redis2
    restart: unless-stopped
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis1
      - REDIS_MASTER_PASSWORD=redis
      - REDIS_PASSWORD=redis
      - REDIS_SENTINEL_RESOLVE_HOSTNAMES=yes
    ports:
      - "6380:6379"
    logging:
      driver: "json-file"
      options:
        "max-size": "10m"
        "max-file": "5"
    volumes:
      # - redis2:/data
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 4
      start_period: 10s
    depends_on:
      redis1:
        condition: service_healthy


  redis3:
    <<: *redis-slave
    container_name: redis3
    ports: 
      - "6381:6379"


#######################################


  redis-sentinel1:
    &redis-sentinel
    image: bitnami/redis-sentinel:7.2.4
    container_name: redis-sentinel1
    restart: unless-stopped
    environment:
      - REDIS_MASTER_SET=mymaster
      - REDIS_MASTER_HOST=redis1
      - REDIS_MASTER_PASSWORD=redis
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=6000
      - REDIS_SENTINEL_RESOLVE_HOSTNAMES=yes
    ports: 
       - "26379:26379"
    logging:
      driver: "json-file"
      options:
        "max-size": "10m"
        "max-file": "5"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -p 26379 SENTINEL sentinels $$REDIS_MASTER_SET | grep sentinel"]
      interval: 30s
      timeout: 10s
      retries: 4
      start_period: 10s
    depends_on:
      redis1:
        condition: service_healthy


  redis-sentinel2:
    <<: *redis-sentinel
    container_name: redis-sentinel2
    ports: 
      - "26380:26379"


  redis-sentinel3:
    <<: *redis-sentinel
    container_name: redis-sentinel3
    ports: 
      - "26381:26379"